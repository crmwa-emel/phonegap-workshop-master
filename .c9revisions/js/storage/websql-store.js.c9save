{"ts":1354582006539,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var WebSqlStore = function(successCallback, errorCallback) {\n\n    this.initializeDatabase = function(successCallback, errorCallback) {\n        var self = this;\n        this.db = window.openDatabase(\"EmployeeDB\", \"1.0\", \"Employee Demo DB\", 200000);\n        this.db.transaction(\n                function(tx) {\n                    self.createTable(tx);\n                    self.addSampleData(tx);\n                },\n                function(error) {\n                    console.log('Transaction error: ' + error);\n                    if (errorCallback) errorCallback();\n                },\n                function() {\n                    console.log('Transaction success');\n                    if (successCallback) successCallback();\n                }\n        )\n    }\n\n    this.createTable = function(tx) {\n        tx.executeSql('DROP TABLE IF EXISTS employee');\n        var sql = \"CREATE TABLE IF NOT EXISTS employee ( \" +\n            \"id INTEGER PRIMARY KEY AUTOINCREMENT, \" +\n            \"firstName VARCHAR(50), \" +\n            \"lastName VARCHAR(50), \" +\n            \"title VARCHAR(50), \" +\n            \"managerId INTEGER, \" +\n            \"city VARCHAR(50), \" +\n            \"officePhone VARCHAR(50), \" +\n            \"cellPhone VARCHAR(50), \" +\n            \"email VARCHAR(50))\";\n        tx.executeSql(sql, null,\n                function() {\n                    console.log('Create table success');\n                },\n                function(tx, error) {\n                    alert('Create table error: ' + error.message);\n                });\n    }\n\n    this.addSampleData = function(tx, employees) {\n        var employees = [\n                {\"id\": 1, \"firstName\": \"Ryan\", \"lastName\": \"Howard\", \"title\":\"Vice President, North East\", \"managerId\": 0, \"city\":\"New York, NY\", \"cellPhone\":\"212-999-8888\", \"officePhone\":\"212-999-8887\", \"email\":\"ryan@dundermifflin.com\"},\n                {\"id\": 2, \"firstName\": \"Michael\", \"lastName\": \"Scott\", \"title\":\"Regional Manager\", \"managerId\": 1, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-865-2536\", \"officePhone\":\"570-123-4567\", \"email\":\"michael@dundermifflin.com\"},\n                {\"id\": 3, \"firstName\": \"Dwight\", \"lastName\": \"Schrute\", \"title\":\"Assistant Regional Manager\", \"managerId\": 2, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-865-1158\", \"officePhone\":\"570-843-8963\", \"email\":\"dwight@dundermifflin.com\"},\n                {\"id\": 4, \"firstName\": \"Jim\", \"lastName\": \"Halpert\", \"title\":\"Assistant Regional Manager\", \"managerId\": 2, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-865-8989\", \"officePhone\":\"570-968-5741\", \"email\":\"dwight@dundermifflin.com\"},\n                {\"id\": 5, \"firstName\": \"Pamela\", \"lastName\": \"Beesly\", \"title\":\"Receptionist\", \"managerId\": 2, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-999-5555\", \"officePhone\":\"570-999-7474\", \"email\":\"pam@dundermifflin.com\"},\n                {\"id\": 6, \"firstName\": \"Angela\", \"lastName\": \"Martin\", \"title\":\"Senior Accountant\", \"managerId\": 2, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-555-9696\", \"officePhone\":\"570-999-3232\", \"email\":\"angela@dundermifflin.com\"},\n                {\"id\": 7, \"firstName\": \"Kevin\", \"lastName\": \"Malone\", \"title\":\"Accountant\", \"managerId\": 6, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-777-9696\", \"officePhone\":\"570-111-2525\", \"email\":\"kmalone@dundermifflin.com\"},\n                {\"id\": 8, \"firstName\": \"Oscar\", \"lastName\": \"Martinez\", \"title\":\"Accountant\", \"managerId\": 6, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-321-9999\", \"officePhone\":\"570-585-3333\", \"email\":\"oscar@dundermifflin.com\"},\n                {\"id\": 9, \"firstName\": \"Creed\", \"lastName\": \"Bratton\", \"title\":\"Quality Assurance\", \"managerId\": 2, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-222-6666\", \"officePhone\":\"570-333-8585\", \"email\":\"creed@dundermifflin.com\"},\n                {\"id\": 10, \"firstName\": \"Andy\", \"lastName\": \"Bernard\", \"title\":\"Sales Director\", \"managerId\": 4, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-555-0000\", \"officePhone\":\"570-646-9999\", \"email\":\"andy@dundermifflin.com\"},\n                {\"id\": 11, \"firstName\": \"Phyllis\", \"lastName\": \"Lapin\", \"title\":\"Sales Representative\", \"managerId\": 10, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-241-8585\", \"officePhone\":\"570-632-1919\", \"email\":\"phyllis@dundermifflin.com\"},\n                {\"id\": 12, \"firstName\": \"Stanley\", \"lastName\": \"Hudson\", \"title\":\"Sales Representative\", \"managerId\": 10, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-700-6464\", \"officePhone\":\"570-787-9393\", \"email\":\"shudson@dundermifflin.com\"},\n                {\"id\": 13, \"firstName\": \"Meredith\", \"lastName\": \"Palmer\", \"title\":\"Supplier Relations\", \"managerId\": 2, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-588-6567\", \"officePhone\":\"570-981-6167\", \"email\":\"meredith@dundermifflin.com\"},\n                {\"id\": 14, \"firstName\": \"Kelly\", \"lastName\": \"Kapoor\", \"title\":\"Customer Service Rep.\", \"managerId\": 2, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-123-9654\", \"officePhone\":\"570-125-3666\", \"email\":\"kelly@dundermifflin.com\"},\n                {\"id\": 15, \"firstName\": \"Toby\", \"lastName\": \"Flenderson\", \"title\":\"Human Resources\", \"managerId\": 1, \"city\":\"Scranton, PA\", \"cellPhone\":\"570-485-8554\", \"officePhone\":\"570-699-5577\", \"email\":\"toby@dundermifflin.com\"}\n            ];\n        var l = employees.length;\n        var sql = \"INSERT OR REPLACE INTO employee \" +\n            \"(id, firstName, lastName, managerId, title, city, officePhone, cellPhone, email) \" +\n            \"VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\";\n        var e;\n        for (var i = 0; i < l; i++) {\n            e = employees[i];\n            tx.executeSql(sql, [e.id, e.firstName, e.lastName, e.managerId, e.title, e.city, e.officePhone, e.cellPhone, e.email],\n                    function() {\n                        console.log('INSERT success');\n                    },\n                    function(tx, error) {\n                        alert('INSERT error: ' + error.message);\n                    });\n        }\n    }\n\n    this.findByName = function(searchKey, callback) {\n        this.db.transaction(\n            function(tx) {\n\n                var sql = \"SELECT e.id, e.firstName, e.lastName, e.title, count(r.id) reportCount \" +\n                    \"FROM employee e LEFT JOIN employee r ON r.managerId = e.id \" +\n                    \"WHERE e.firstName || ' ' || e.lastName LIKE ? \" +\n                    \"GROUP BY e.id ORDER BY e.lastName, e.firstName\";\n\n                tx.executeSql(sql, ['%' + searchKey + '%'], function(tx, results) {\n                    var len = results.rows.length,\n                        employees = [],\n                        i = 0;\n                    for (; i < len; i = i + 1) {\n                        employees[i] = results.rows.item(i);\n                    }\n                    callback(employees);\n                });\n            },\n            function(error) {\n                alert(\"Transaction Error: \" + error.message);\n            }\n        );\n    }\n\n    this.findById = function(id, callback) {\n        this.db.transaction(\n            function(tx) {\n\n                var sql = \"SELECT e.id, e.firstName, e.lastName, e.title, e.city, e.officePhone, e.cellPhone, e.email, e.managerId, m.firstName managerFirstName, m.lastName managerLastName, count(r.id) reportCount \" +\n                    \"FROM employee e \" +\n                    \"LEFT JOIN employee r ON r.managerId = e.id \" +\n                    \"LEFT JOIN employee m ON e.managerId = m.id \" +\n                    \"WHERE e.id=:id\";\n\n                tx.executeSql(sql, [id], function(tx, results) {\n                    callback(results.rows.length === 1 ? results.rows.item(0) : null);\n                });\n            },\n            function(error) {\n                alert(\"Transaction Error: \" + error.message);\n            }\n        );\n    };\n\n    this.initializeDatabase(successCallback, errorCallback);\n\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":7763}]],"length":7763}
